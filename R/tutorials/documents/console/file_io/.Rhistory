x <- c (2:20)
? sort
y <- (0:10)
plot(y,x)
a <- (1:5)
b <- (1:5)
plot(a,b)
library(grid)
detach("package:grid", unload = TRUE)
library(KernSmooth)
detach("package:KernSmooth", unload = TRUE)
clear()
options("java.home")
options("java.home"="/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home")
options("java.home")
library(rJava)
library(xlsx)
library(xlsxjars)
getwd()
setwd('~/codebase/R/tutorials/documents/console/file_io')
phones = read.xlsx("Phones.xls", sheetIndex=1, rowIndex=c(1:7), colIndex=c(1:8), header=TRUE)
phones
phones1 = read.xlsx("Phones.xls", sheetIndex = 1, rowIndex = c(1,2,5,6,7), colIndex = c(1,3,6,8), header = TRUE)
phones1
x = c(1,2,3,4,5,1,3,4,5,2,3,1,4,6,7,4,2,1,3,5,6,7,4,2,8)
x
x[10]
x[10:15]
x[c(1,5,7,18,20)]
x[20]
x[x>3]
x[-c(1,2,3)]
x[-c(5:10)]
order(x)
x[order(x)]
max(order(x))
x[max(order(x))]
x[-1]
rank(x)
rank(x, ties.method="first")
rev(x)
rev(x[order(x)])
mean(x)
max(x)
min(x)
sd(x)
lapply(x, sqrt)
sapply(x,sqrt)
split(x, 1:4)
split(x, 1:5)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
x = c(1:20)
x
y = rep(1:10, times=10)
y
x[y]
a = c(1,2)
a[y]
b = rep(1:2, times=20)
a[b]
x[order(x, decreasing=TRUE)]
rev(x[order(x)])
split(x,5)
x
split(x,1:5)
split(x,1:2)
split(x,1:3)
split(x,1:4)
split(x,1:10)
split(x,1:10)[2]
split(x,1:10)[:2]
split(x,1:10)
a = c(1:24)
a = dim(3)
a
a = dim(c,3)
a = dim(c,3)
a = c(1:24)
a
dim(a) = c(2,3,4)
a
b = c(1:24)
dim(b) = c(3,2,4)
b
b[1,,]
b[1,2,]
x[x>10]
b[x>10]
b
b[b>10]
b[x>10]
b[b>10]
x>10
x = c(1,2)
y = c(3:6)
dim(y) = c(2,2)
outer(x,y)
x
y
outer(x,y,^)
outer(x,y,**)
outer(x,y,'6')
outer(x,y,'^')
x
y
outer(y,x,'^')
apply(x,mean)
apply(x,1,mean)
y
apply(y,mean)
apply(y,1,mean)
apply(y,2,mean)
apply(y,c(1:2),mean)
y
y[1,]
y[,1]
x
y
x
outer(x,y)
outer(x,y, '/')
k = c(1:30)
dim(k,2,3,5)
help(dim)
dim(k) = c(2,3,5)
k
apply(k[,,1], 1, mean())
apply(k[,,1], 1, mean)
k[,,1]
apply(k[,,1], 2, mean)
x %o% y
apply(y, 2,sqrt)
y
k
k[,2,]
k[2,3,2]
k[,,1:2]
k[,,-c(1)]
k[,,2:4]
k[,,2:5]
k[,,-c(2)]
l = c(1,1,1)
diag(l)
diag_matrix = diag(matrix(c(1:9), nrow=3))
diag_matrix
diagonal_elements = diagonal_matrix
diagonal_elements = diag_matrix
diagonal_elements
type(diagonal_elements)
typeof(diagonal_elements)
class(diagonal_elements)
mode(diagonal_elements)
z = 5
diaz(z)
diag(z)
k
k = matrix(c(1:10), nrow=5)
k
idn5x5 = diag(z)
idn5x5
k %*% idn5x5
dim(k) = c(2,5)
k
k %*% idn5x5
dim(k) = c(5,2)
k
tcrosspod(idn5x5, k)
tcrossprod(idn5x5, k)
dim(k) = c(2,5)
tcrossprod(idn5x5, k)
solve(k)
solve(idn5x5)
m1 = matrix(c(1:9), nrow=3)
m1
solve(m1)
m1 %*% solve(m1)
m1 = matrix(c(12,14,2,3,5,6), nrow=2)
m1
solve(m1)
m1 = matrix(c(12,14,2,3,5,6,10,11,13), nrow=3)
m1
solve(m1)
m1 %*% solve(m1)
m1
m1[3,2]
m1[3,2]
m1[2,2]
m1[1:2,c(3,2)]
m1[m1<5]
m1
k
j = matrix(c(19, 23, 47), nrow = 1)
j
lsfit(j, m1)
dim(j) = c(3,1)
j
lsfit(m1,j)
m1
j
rbind(m1, c(20,31,29))
m1
m1 = rbind(m1, c(20,31,29))
m1
lsfit(m1,j)
j = rbind(j, c(1))
j
lsfit(m1,j)
cm = matrix(paste("a", c(1:16)), nrow=4)
cm
diag(3)
id3 = diag(3)
solve(id3)
matrix(c(5,2,-2,1), nrow=2)
solve(matrix(c(5,-2,2,1), nrow=2), c(4,11))
solve(matrix(c(5,-2,2,1), nrow=2), matrix(c(4,11), nrow=2))
attach(mtcars)
y = mtcars$mpg
y
len(y)
length(y)
x = c(mtcars$cyl, mtcars$hp, mtcars$wt)
x
lengh(x)
length(x)
solve(matrix(x,nrow=32), y)
x = matrix(x, nrow=32)
x
lsfit(x,y)
attach(phones)
phones
phones[c("Maker")]
phones[2:5,]
phones[2:5]
phones[2:5,]
phones[price > 300, c("Maker")]
phones[Price > 300, c("Maker")]
head(phones)
tail(phones)
head(phones,2)
tail(phones,3)
subset(phones, Price>500)
subset(phones, Price>300)
phones(Price>300)
phones[Price>300]
phones1 = phones[3:5,]
phones1
rbind(phones,phones1)
rbind(phones[Maker, Price],phones1[Maker, Price])
rbind(phones["Maker"], phones1["Maker"])
rbind(phones["Maker"], phones1[c("Maker", "Price")])
rbind(phones["Maker", "Price"], phones1[c("Maker", "Price")])
rbind(phones["Maker", "Price"], phones1[c("Maker", "Price")])
phones1
phones
aggregate(phones, list(phones$OperSys), mean)
aggregate(phones[c("Price", "No_Apps")], list(phones$OperSys), sum)
aggregate(phones[c("No_Apps")], list(phones$OperSys), sum)
aggregate(phones[c("Price")], list(phones$OperSys), mean)
s = c(6*"500 Megapixels")
s = 6*c("500 Megapixels")
transform(phones, Price=Price*2)
getwd()
phones
cbind(phones1, Camera_Res = paste(c(2,5,6,7,8,9), "MP"))
cbind(phones1, Camera_Res = paste(c(2,5,6,7,8), "MP"))
cbind(phones1, Camera_Res = paste(c(2,5,6), "MP"))
aggregate(phones1[c("OperSys","No_Sold")], mean)
phones1
aggregate(phones1[c("OperSys","No_Sold")], list(phones$OperSys), mean)
aggregate(phones1[c("OperSys","No_Sold")], list(phones2$OperSys), mean)
aggregate(phones1[c("OperSys","No_Sold")], list(phones1$OperSys), mean)
aggregate(phones[c("OperSys","No_Sold")], list(phones$OperSys), mean)
aggregate(phones[c("OperSys","No_Sold")], list(phones$Maker), mean)
aggregate(phones[c("OperSys","No_Sold")], list(phones$Maker), sum
)
aggregate(phones[c("OperSys","No_Sold")], list(phones$Maker), sum)
aggregate(phones[c("No_Sold")], list(phones$Maker), sum)
aggregate(phones[c("OperSys","No_Sold")], list(phones$Maker), mean)
aggregate(phones[c("OperSys","No_Sold")], list(phones$Maker), sum)
aggregate(cbind(phones$OperSys, phones$No_Sold), list(phones$OperSys), sum)
phones
aggregate(phones[c("OperSys","Price")], list(phones$Maker), mean)
aggregate(phones, list(phones$Maker), mean)
aggregate(phones, list("Maker"), mean)
aggregate(phones, list(Maker), mean)
phones
phones2
phones1
phones[Maker == "Android"]
phones[Maker == "Apple"]
phones[Maker = "Apple"]
phones[Maker]
phones[Maker="Samsung"]
phones[Maker=Samsung]
subset(phones, OperSys="Android")
subset(phones, OperSys=="Android")
subset(phones, OperSys="Android")
subset(phones, Price=299)
subset(phones, phones$Price=299)
iris
aggregate(iris, list(iris$Species), mean)
aggregate(iris, list(iris$Species), sd)
aggregate(iris, list(iris$Species), sd)
aggregate(iris[c("Sepal.Length", "Petal.Length")], list(iris$Species), sd)
